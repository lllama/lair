Template.addServiceVulnerability.helpers({
    rendered: function () {
        $('#title').typeahead({
            source: vulnerabilities
        });
    },

    vulnerabilities: function () {
        var projectId = Session.get('projectId');
        var vulnerabilities = Vulnerabilities.find({
            project_id: projectId
        }).fetch();
        if (!vulnerabilities) {
            return [];
        }
        var vulns = [];
        vulnerabilities.forEach(function (vuln) {
            vulns.push(vuln.title);
        });
        return vulns;
    }
});

Template.addServiceVulnerability.events({
    'submit form': function (event, tpl) {
        event.preventDefault();
        var id = Session.get('projectId');
        var portId = Session.get('portId');
        var title = tpl.find('[name=title]').value;
        var cvss = parseFloat(tpl.find('[name=cvss]').value);
        var description = tpl.find('[name=description]').value;
        var evidence = tpl.find('[name=evidence]').value;
        var solution = tpl.find('[name=solution]').value;
        Meteor.call('addServiceVulnerability', id, portId, title, cvss, description, evidence, solution, function (err, res) {
            if (err) {
                return Alerts.insert({
                    class: 'alert-warning',
                    strong: 'Error',
                    message: err.reason
                });
            }
            return Router.go('/project/' + id + '/services/' + portId);
        });
    }
});
