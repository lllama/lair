Template.addVulnerabilityHostBulk.events({
    'submit form': function (event, tpl) {
        event.preventDefault();
        var projectId = Session.get('projectId');
        var vulnerabilityId = Session.get('vulnerabilityId');
        var csv = tpl.find('[name=csv]').value.split('\n');
        for (var i = 0; i < csv.length; i++) {
            var parts = csv[i].split(',');
            if (parts.length !== 3) {
                Alerts.insert({
                    "class": "alert-warning",
                    "strong": "Error",
                    "message": "Invalid csv data"
                });
                break;
            } else {
                Meteor.call('addHostToVulnerability', projectId, vulnerabilityId, parts[0], parseInt(parts[1]), parts[2], function (err) {
                    if (err) {
                        Alerts.insert({
                            "class": "alert-warning",
                            "strong": "Error",
                            "message": err.reason
                        });
                    }
                });
            }
        }
        return Router.go('/project/' + projectId + '/vulnerabilities/' + vulnerabilityId + '/hosts');
    }
});
